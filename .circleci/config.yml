version: 2.1

commands:
  setup_sbt:
    description: Get and install SBT
    parameters:
      sbt_version:
        type: string
        default: "1.7.1"
    steps:
      - restore_cache:
          keys:
            - &sbt_cache_key sbt-{{ checksum "project/build.properties" }}

      - run:
          name: Setup SBT
          command: |
                    if [ ! -x ~/sbt/bin/sbt ]; then
                      cd ~/
                      curl --silent -L -o sbt.tgz curl --silent -L -o sbt.tgz https://github.com/sbt/sbt/releases/download/v<< parameters.sbt_version >>/sbt-<< parameters.sbt_version >>.tgz
                      tar -xzvf sbt.tgz && rm -f sbt.tgz
                    fi
      - save_cache:
          paths:
            - ~/sbt
          key: *sbt_cache_key

  setup_integration:
    description: Setup integration environment
    steps:
      - restore_cache:
          keys:
          - &mongo_cache_key mongodb-{{ checksum ".ci_scripts/beforeInstall.sh" }}

      - run:
          name: Prepare integration environment
          command: |
                    if [ `which make | wc -l` -eq 0 ]; then
                      sudo apt update
                      sudo apt install build-essential
                    fi
                    ./.ci_scripts/beforeInstall.sh
      - save_cache:
          paths:
            - ~/ssl
            - ~/mongodb-linux-x86_64-amazon-3.6.6
          key: *mongo_cache_key

      - run:
          name: Start integration services
          command: |
                    export MONGO_CONF="/tmp/mongod.conf"
                    ./.ci_scripts/fork-mongod.sh /tmp/validate-env.sh
          background: true

  build_n_tests:
    description: Build & Run tests
    steps:
      - restore_cache:
          keys:
          - &scala_cache_key scala-{{ .Environment.CIRCLE_JOB }}-{{ checksum "version.sbt" }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}-{{ checksum "project/Compiler.scala" }}

      - run:
          name: Build & Run tests
          command: |
                    export PATH=$PATH:~/sbt/bin
                    export USER=`basename $HOME`
                    
                    ./.ci_scripts/validate.sh
      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.coursier/cache
            - ~/.sbt
          key: *scala_cache_key

  collect_test_reports:
    description: Collect test reports
    steps:
      - run:
          name: Collect test report
          command: |
                    mkdir test-reports
                    find . -path '*/test-reports/*' -name '*.xml' \
                      -print -exec cp {} test-reports \;
          when: always

  publish_snapshots:
    description: Publish artifacts to Snapshots repository
    parameters:
      release_suffix:
        type: string
        default: ""
      play_version:
        type: string
        default: ""
      scala_versions:
        type: string
        default: ""
    steps:
      - deploy:
          name: Publish artifacts to Sonatype Snapshots
          command: |
                    if [ ! "${CIRCLE_BRANCH}" = "master" ]; then
                      echo "Skipped on branch ${CIRCLE_BRANCH}"
                      exit 0
                    fi
                    V=`sbt 'show version' 2>&1 | tail -n 2 | cut -d ']' -f 2 | grep SNAPSHOT | sed -e 's/[ \t]*//g'`
                    if [ `echo "$V" | grep -- '-SNAPSHOT' | wc -l` -eq 0 ]; then
                      S=`echo "$V" | perl -pe 's/([0-9]+)$/${\($1 + 1)}-SNAPSHOT/'`
                      echo "Cannot bump $V to $S"
                      echo "version in ThisBuild := \"$S\"" > version.sbt
                    fi
                    
                    export PUBLISH_REPO_NAME="Sonatype Nexus Repository Manager"
                    export PUBLISH_REPO_ID="oss.sonatype.org"
                    export PUBLISH_REPO_URL="https://oss.sonatype.org/content/repositories/snapshots"
                    
                    if [ "x$PUBLISH_USER" = "x" -o "x$PUBLISH_PASS" = "x" ]; then
                      echo "Missing publication credentials"
                      exit 1
                    fi
                    
                    export RELEASE_SUFFIX="<< parameters.release_suffix >>"
                    export PLAY_VERSION="<< parameters.play_version >>"
                    
                    echo "Publishing artifacts for $PLAY_VERSION"
                    
                    if [ "x<< parameters.scala_versions >>" = "x" ]; then
                      sbt +publish
                    else
                      for V in `echo "<< parameters.scala_versions >>"`; do
                        sbt ++$V publish
                      done
                    fi
jobs:
  jdk8_scala212_play26:
    docker:
      - image: cchantep/circleci-openjdk:8-jdk

    working_directory: ~/repo

    environment:
      REACTIVEMONGO_SHADED: false
      RELEASE_SUFFIX: play26
      PLAY_VERSION: 2.6.7
      SCALA_VERSION: 2.12.17
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  jdk10_scala213_play27:
    docker:
      - image: cchantep/circleci-openjdk:10-jdk

    working_directory: ~/repo

    environment:
      RELEASE_SUFFIX: play27
      PLAY_VERSION: 2.7.4
      SCALA_VERSION: 2.13.8
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  jdk11_scala213_play28:
    docker:
      - image: cchantep/circleci-openjdk:11-jdk

    working_directory: ~/repo

    environment:
      RELEASE_SUFFIX: play28
      PLAY_VERSION: 2.8.19
      SCALA_VERSION: 2.13.8
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  jdk11_scala31_play28:
    docker:
      - image: cchantep/circleci-openjdk:11-jdk

    working_directory: ~/repo

    environment:
      RELEASE_SUFFIX: play28
      PLAY_VERSION: 2.8.19
      SCALA_VERSION: 3.2.1
    
    steps:
      - checkout
      - setup_sbt
      - setup_integration
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  publish_snapshots:
    docker:
      - image: cchantep/circleci-openjdk:8-jdk

    working_directory: ~/repo
    
    steps:
      - checkout
      - setup_sbt

      - restore_cache:
          keys:
          - *scala_cache_key

      - publish_snapshots:
          release_suffix: play25
          play_version: 2.5.7
          scala_versions: 2.11.12

      - publish_snapshots:
          release_suffix: play26
          play_version: 2.6.7
          scala_versions: 2.11.12 2.12.17

      - publish_snapshots:
          release_suffix: play27
          play_version: 2.7.3
          scala_versions: 2.12.17 2.13.8

      - publish_snapshots:
          release_suffix: play28
          play_version: 2.8.0
          scala_versions: 2.12.17 2.13.8 3.2.1

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.coursier/cache
            - ~/.sbt
          key: *scala_cache_key

  trigger_dependent_builds:
    docker:
      - image: cimg/base:2020.01

    working_directory: ~/repo

    steps:
      - run:
          name: Trigger build @ Reactivemongo-Scalafix
          command: |
                    curl -X POST "https://circleci.com/api/v1.1/project/github/ReactiveMongo/ReactiveMongo-Scalafix/build?circle-token=${REACTIVEMONGO_SCALAFIX_API_TOKEN}"
workflows:
  version: 2

  main_suite:
    jobs:
      - jdk8_scala212_play26
      - jdk10_scala213_play27
      - jdk11_scala213_play28
      - jdk11_scala31_play28

      - publish_snapshots:
          filters:
            branches:
              only:
                - master
          requires:
            - jdk8_scala212_play26
            - jdk10_scala213_play27
            - jdk11_scala213_play28
            - jdk11_scala31_play28

      - trigger_dependent_builds:
          filters:
            branches:
              only:
                - master
          requires:
            - publish_snapshots
